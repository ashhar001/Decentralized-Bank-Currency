{"version":3,"sources":["dbank.png","components/Navbar.js","components/Header.js","components/Deposit.js","components/Withdraw.js","components/AccountDetails.js","components/BankDetails.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","href","rel","src","dbank","alt","height","Component","Header","this","props","account","Deposit","handleSubmit","e","preventDefault","amount","depositAmount","value","deposit","a","web3","Web3","window","ethereum","methods","send","toString","from","setState","dAmount","utils","fromWei","console","log","onSubmit","id","step","type","placeholder","required","ref","input","Withdraw","withdraw","onClick","AccountDetails","tokenBalance","BankDetails","dBankName","dBankAddress","tokenName","dBankTotalDepositedAmount","totalSupply","App","state","token","balance","loadBlockchainData","dispatch","eth","net","getId","netId","getAccounts","accounts","getBalance","alert","Contract","Token","abi","networks","address","dBank","balanceOf","call","role","Tabs","defaultActiveKey","Tab","eventKey","title","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,mC,ggBCsB5BC,E,4JAlBb,WACE,OACE,6BACE,yBAAKC,UAAU,kEACb,uBACEA,UAAU,sCACVC,KAAK,IACLC,IAAI,uBAEJ,yBAAKC,IAAKC,IAAOC,IAAI,OAAOC,OAAO,OACnC,2C,GAXSC,aCYNC,E,4JAVX,WACI,OACI,6BACI,kEACA,4BAAKC,KAAKC,MAAMC,c,GAPXJ,aC8DNK,G,mNA1CbC,aAAe,SAACC,GACdA,EAAEC,iBAEF,IAAIC,EAAS,EAAKC,cAAcC,MAEhCF,GAAe,SAAG,GAAM,IACxB,EAAKG,QAAQH,I,oFAvBf,WAAcA,GAAd,eAAAI,EAAA,yDACQC,EAAO,IAAIC,IAAKC,OAAOC,UACJ,cAArBf,KAAKC,MAAMN,MAFjB,0CAIYK,KAAKC,MAAMN,MAAMqB,QACpBN,UACAO,KAAK,CAAER,MAAOF,EAAOW,WAAYC,KAAMnB,KAAKC,MAAMC,UAN3D,OASMF,KAAKoB,SAAS,CACZC,QAAST,EAAKU,MAAMC,QAAQhB,EAAOW,cAV3C,gDAaMM,QAAQC,IAAI,mBAAZ,MAbN,yD,2EAyBA,WAAU,IAAD,OACP,OACE,6BACE,6BADF,gCAGE,6BAHF,4BAKE,6BALF,oCAOE,6BACA,0BAAMC,SAAU1B,KAAKI,cACnB,yBAAKb,UAAU,sBACb,6BACA,2BACEoC,GAAG,gBACHC,KAAK,OACLC,KAAK,SACLtC,UAAU,+BACVuC,YAAY,YACZC,UAAQ,EACRC,IAAK,SAACC,GACJ,EAAKzB,cAAgByB,MAI3B,4BAAQJ,KAAK,SAAStC,UAAU,mBAAhC,iB,GAnDYO,cCqCPoC,E,qMAtCb,WAAe7B,GAAf,SAAAM,EAAA,yDACEN,EAAEC,iBACuB,cAArBN,KAAKC,MAAMN,MAFjB,0CAIYK,KAAKC,MAAMN,MAAMqB,QACpBmB,WACAlB,KAAK,CAAEE,KAAMnB,KAAKC,MAAMC,UANjC,uDAQMsB,QAAQC,IAAI,oBAAZ,MARN,yD,2EAeA,WAAU,IAAD,OACP,OACE,6BACE,6BADF,2CAGE,6BACA,6BACA,6BACE,4BACEI,KAAK,SACLtC,UAAU,kBACV6C,QAAS,SAAC/B,GACR,EAAK8B,SAAS9B,KAJlB,kB,GAxBaP,aCcRuC,E,4JAbb,WACE,OACE,6BACE,6BACA,gDAAsBrC,KAAKC,MAAMoB,SACjC,6BACA,6BAJF,eAKerB,KAAKC,MAAMqC,aAL1B,Y,GAHuBxC,aCmBdyC,E,4JAlBb,WACE,OACE,6BACE,6BACA,2CAAiBvC,KAAKC,MAAMuC,WAC5B,6BACA,8CAAoBxC,KAAKC,MAAMwC,cAC/B,6BACA,4CAAkBzC,KAAKC,MAAMyC,WAC7B,6BACA,kDAAwB1C,KAAKC,MAAM0C,2BACnC,6BACA,wDAA8B3C,KAAKC,MAAM2C,kB,GAbvB9C,aCwIX+C,E,kDAzDb,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IACD6C,MAAQ,CACXlC,KAAM,YACNV,QAAS,GACT6C,MAAO,KACPL,UAAW,MACXE,YAAa,EACbjD,MAAO,KACP6C,UAAW,8BACXQ,QAAS,EACTP,aAAc,KACdE,0BAA2B,EAC3BL,aAAc,EAEdjB,QAAS,GAfM,E,6FA/DnB,sBAAAV,EAAA,sEACQX,KAAKiD,mBAAmBjD,KAAKC,MAAMiD,UAD3C,gD,6HAKA,WAAyBA,GAAzB,iCAAAvC,EAAA,yDAEiC,qBAApBG,OAAOC,SAFpB,wBAGUH,EAAO,IAAIC,IAAKC,OAAOC,UAHjC,SAIwBH,EAAKuC,IAAIC,IAAIC,QAJrC,cAIUC,EAJV,gBAK2B1C,EAAKuC,IAAII,cALpC,UAS+B,qBAJrBC,EALV,QASwB,GATxB,kCAU4B5C,EAAKuC,IAAIM,WAAWD,EAAS,IAVzD,QAUYR,EAVZ,OAWMhD,KAAKoB,SAAS,CACZlB,QAASsD,EAAS,GAClBR,QAASpC,EAAKU,MAAMC,QAAQyB,GAC5BpC,KAAMA,IAdd,wBAiBME,OAAO4C,MAAM,+BAjBnB,yBAsBYX,EAAQ,IAAInC,EAAKuC,IAAIQ,SACzBC,EAAMC,IACND,EAAME,SAASR,GAAOS,SAElBpE,EAAQ,IAAIiB,EAAKuC,IAAIQ,SACzBK,EAAMH,IACNG,EAAMF,SAASR,GAAOS,SAElBtB,EAAeuB,EAAMF,SAASR,GAAOS,QA9BjD,UA+B8CnD,EAAKuC,IAAIM,WAAWhB,GA/BlE,eA+BYE,EA/BZ,iBAgCiCI,EAAM/B,QAC9BiD,UAAUjE,KAAK8C,MAAM5C,SACrBgE,OAlCT,eAgCY5B,EAhCZ,iBAoCgCS,EAAM/B,QAAQ4B,cAAcsB,OApC5D,QAoCYtB,EApCZ,OAsCM5C,KAAKoB,SAAS,CACZ2B,MAAOA,EACPpD,MAAOA,EACP8C,aAAcA,EACdH,aAAc1B,EAAKU,MAAMC,QAAQe,GACjCM,YAAahC,EAAKU,MAAMC,QAAQqB,GAChCD,0BAA2B/B,EAAKU,MAAMC,QAAQoB,KA5CtD,mDA+CMnB,QAAQC,IAAI,QAAZ,MACAX,OAAO4C,MAAM,iDAhDnB,gCAmDI5C,OAAO4C,MAAM,2BAnDjB,2D,2EA6EA,WACE,OACE,yBAAKnE,UAAU,kBAEb,kBAAC,EAAD,MACA,yBAAKA,UAAU,oCACb,6BACA,kBAAC,EAAD,CAAQW,QAAYF,KAAK8C,MAAM5C,UAC/B,6BAEA,yBAAKX,UAAU,OACb,0BAAM4E,KAAK,OAAO5E,UAAU,gCAC1B,yBAAKA,UAAU,2BACb,kBAAC6E,EAAA,EAAD,CAAMC,iBAAiB,UAAU1C,GAAG,4BAClC,kBAAC2C,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,WAC5B,kBAAC,EAAD,CAAS7E,MAASK,KAAK8C,MAAMnD,MAAOO,QAASF,KAAK8C,MAAM5C,WAG1D,kBAACoE,EAAA,EAAD,CAAKC,SAAS,WAAWC,MAAM,YAC7B,kBAAC,EAAD,CAAU7E,MAAOK,KAAK8C,MAAMnD,MAAOO,QAASF,KAAK8C,MAAM5C,WAEzD,kBAACoE,EAAA,EAAD,CAAKC,SAAS,iBAAiBC,MAAM,mBACnC,kBAAC,EAAD,CAAgBnD,QAAUrB,KAAK8C,MAAMzB,QAASiB,aAActC,KAAK8C,MAAMR,gBAGzE,kBAACgC,EAAA,EAAD,CAAKC,SAAS,cAAcC,MAAM,gBAChC,kBAAC,EAAD,CAAahC,UAAWxC,KAAK8C,MAAMN,UAAWC,aAAezC,KAAK8C,MAAML,aAAcC,UAAY1C,KAAK8C,MAAMJ,UAAWC,0BAA4B3C,KAAK8C,MAAMH,0BAA2BC,YAAc5C,KAAK8C,MAAMF,yB,GA/GrN9C,aCHE2E,QACW,cAA7B3D,OAAO4D,SAASC,UAEe,UAA7B7D,OAAO4D,SAASC,UAEhB7D,OAAO4D,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.4e90a793.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dbank.adca41d3.png\";","import React, { Component } from 'react';\r\nimport dbank from '../dbank.png';\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a\r\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n            href=\"#\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <img src={dbank} alt=\"logo\" height=\"32\" />\r\n            <b>dBank</b>\r\n          </a>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Welocome to the Decentralized Bank</h1>\r\n                <h2>{this.props.account}</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react'\r\n// import { Tabs, Tab } from 'react-bootstrap';\r\nimport Web3 from 'web3'\r\n\r\nclass Deposit extends Component {\r\n  async deposit(amount) {\r\n    const web3 = new Web3(window.ethereum)\r\n    if (this.props.dbank !== 'undefined') {\r\n      try {\r\n        await this.props.dbank.methods\r\n          .deposit()\r\n          .send({ value: amount.toString(), from: this.props.account })\r\n\r\n        // const dAmount = dbank.etherBalanceOf().call();\r\n        this.setState({\r\n          dAmount: web3.utils.fromWei(amount.toString()),\r\n        })\r\n      } catch (e) {\r\n        console.log('Error, deposit: ', e)\r\n      }\r\n    }\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let amount = this.depositAmount.value;\r\n\r\n    amount = amount * 10 ** 18 //convert to Wei\r\n    this.deposit(amount)\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        How much you want to deposit?\r\n        <br />\r\n        (min. amount is 0.01 ETH)\r\n        <br />\r\n        (1 deposit is possible at a time)\r\n        <br />\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group mr-sm-2\">\r\n            <br />\r\n            <input\r\n              id=\"depositAmount\"\r\n              step=\"0.01\"\r\n              type=\"number\"\r\n              className=\"form-control form-control-md\"\r\n              placeholder=\"amount...\"\r\n              required\r\n              ref={(input) => {\r\n                this.depositAmount = input\r\n              }}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Deposit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Deposit\r\n","import React, { Component } from 'react'\r\n\r\nclass Withdraw extends Component {\r\n  async withdraw(e) {\r\n    e.preventDefault()\r\n    if (this.props.dbank !== 'undefined') {\r\n      try {\r\n        await this.props.dbank.methods\r\n          .withdraw()\r\n          .send({ from: this.props.account })\r\n      } catch (e) {\r\n        console.log('Error, withdraw: ', e)\r\n      }\r\n    }\r\n    //prevent button from default click\r\n    //check if this.state.dbank is ok\r\n    //in try block call dBank withdraw();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        Do you want to withdraw + take interest?\r\n        <br />\r\n        <br />\r\n        <div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            onClick={(e) => {\r\n              this.withdraw(e)\r\n            }}\r\n          >\r\n            Withdraw\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Withdraw\r\n","import React, { Component } from 'react'\r\n\r\nclass AccountDetails extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <div>Deposited ETH : {this.props.dAmount}</div>\r\n        <br />\r\n        <br />\r\n        DBC Tokens: {this.props.tokenBalance} DBC\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AccountDetails;\r\n","import React, { Component } from 'react'\r\n\r\nclass BankDetails extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <div>Bank Name: {this.props.dBankName}</div>\r\n        <br />\r\n        <div>Bank Address: {this.props.dBankAddress}</div>\r\n        <br />\r\n        <div>Token Name: {this.props.tokenName}</div>\r\n        <br />\r\n        <div>Bank ETH Balance: {this.props.dBankTotalDepositedAmount}</div>\r\n        <br />\r\n        <div>Total DBC Token Supply: {this.props.totalSupply}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BankDetails\r\n","import { Tabs, Tab } from 'react-bootstrap';\nimport dBank from '../abis/dBank.json';\nimport React, { Component } from 'react';\nimport Token from '../abis/Token.json';\n\nimport Web3 from 'web3';\nimport Navbar from './Navbar';\nimport Header from './Header';\nimport './App.css';\nimport Deposit from './Deposit';\nimport Withdraw from './Withdraw';\nimport AccountDetails from './AccountDetails';\nimport BankDetails from './BankDetails';\n\n\nclass App extends Component {\n  \n  \n  async componentWillMount() {\n    await this.loadBlockchainData(this.props.dispatch);\n  }\n\n  // connect the app with the blockchain\n  async loadBlockchainData(dispatch) {\n    //check if MetaMask exists\n    if (typeof window.ethereum !== 'undefined') {\n      const web3 = new Web3(window.ethereum)\n      const netId = await web3.eth.net.getId()\n      const accounts = await web3.eth.getAccounts()\n\n      //load balance\n\n      if (typeof accounts[0] !== 'undefined') {\n        const balance = await web3.eth.getBalance(accounts[0])\n        this.setState({\n          account: accounts[0],\n          balance: web3.utils.fromWei(balance),\n          web3: web3,\n        })\n      } else {\n        window.alert('Please login with Metamask.')\n      }\n\n      try {\n        // Token Bank\n        const token = new web3.eth.Contract(\n          Token.abi,\n          Token.networks[netId].address,\n        )\n        const dbank = new web3.eth.Contract(\n          dBank.abi,\n          dBank.networks[netId].address,\n        )\n        const dBankAddress = dBank.networks[netId].address;\n        const dBankTotalDepositedAmount = await web3.eth.getBalance(dBankAddress);\n        const tokenBalance = await token.methods\n          .balanceOf(this.state.account)\n          .call();\n       \n        const totalSupply = await token.methods.totalSupply().call();\n        \n        this.setState({\n          token: token,\n          dbank: dbank,\n          dBankAddress: dBankAddress,\n          tokenBalance: web3.utils.fromWei(tokenBalance),\n          totalSupply: web3.utils.fromWei(totalSupply),\n          dBankTotalDepositedAmount: web3.utils.fromWei(dBankTotalDepositedAmount)\n        })\n      } catch (e) {\n        console.log('Error', e)\n        window.alert('Contracts not deployed to the current network')\n      }\n    } else {\n      window.alert('Please install Metamask')\n    }\n\n  }\n\n  \n\n  constructor(props) {\n    super(props)\n    this.state = {\n      web3: 'undefined',\n      account: '',\n      token: null,\n      tokenName: 'DBC',\n      totalSupply: 0,\n      dbank: null,\n      dBankName: 'Decentralized Bank Currency',\n      balance: 0,\n      dBankAddress: null,\n      dBankTotalDepositedAmount: 0,\n      tokenBalance: 0,\n      \n      dAmount: 0\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"text-monospace\">\n        \n        <Navbar/>\n        <div className=\"container-fluid mt-5 text-center\">\n          <br/>\n          <Header account = { this.state.account }/>\n          <br></br>\n          \n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\n                  <Tab eventKey=\"deposit\" title=\"Deposit\">\n                    <Deposit dbank = {this.state.dbank} account={this.state.account}/>\n                  </Tab>\n                  \n                  <Tab eventKey=\"withdraw\" title=\"Withdraw\">\n                    <Withdraw dbank={this.state.dbank} account={this.state.account}/>\n                  </Tab>\n                  <Tab eventKey=\"accountDetails\" title=\"Account Details\">\n                    <AccountDetails dAmount= {this.state.dAmount} tokenBalance={this.state.tokenBalance}/>\n                  </Tab>\n\n                  <Tab eventKey=\"bankDetails\" title=\"Bank Details\">\n                    <BankDetails dBankName={this.state.dBankName} dBankAddress ={this.state.dBankAddress} tokenName ={this.state.tokenName} dBankTotalDepositedAmount ={this.state.dBankTotalDepositedAmount} totalSupply ={this.state.totalSupply}/>\n                  </Tab>\n                </Tabs>\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}